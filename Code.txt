#include<cstdio>
#include<math.h>
#include <iostream>
#include <GL/gl.h>
#include <GL/glut.h>
#include <stdlib.h>
#include <windows.h>
#include <mmsystem.h>
# define PI 3.14159265358979323846


GLfloat sunmove = 0.0f;
GLfloat sunspeed = 0.002f;

GLfloat cloudmove = 0.0f;
GLfloat cloudspeed = 0.003f;

GLfloat birdmove = 0.0f;
GLfloat birdspeed = 0.004f;

GLfloat carmove = 0.0f;
GLfloat carspeed = 0.003f;
bool frd = false;
bool bck = false;

GLfloat rain=0.0f;
GLfloat rainspeed = 0.02f;
bool rainday = false;



//bool night = false;



//GLfloat planemove = 0.0f;
//Glfloat planespeed = 0.009f;



void display() {
   glClear(GL_COLOR_BUFFER_BIT);
   glLoadIdentity();

glPushMatrix();
glColor3f(1.0, 1.0, 1.0);
glBegin(GL_POLYGON);
glVertex2f(1.0, -1.0);
glVertex2f(1.0, 0.7);
glVertex2f(-1.0, 0.7);
glVertex2f(-1.0, -1.0);
glEnd();
glPopMatrix();

// ANNEX 7

    glColor3f(0.0, 0.0, 1.0);  //south side
    glBegin(GL_POLYGON);
      glVertex2f(-0.90, 0.0);
      glVertex2f(-0.935, 0.16);
      glVertex2f(-1.0, 0.20);
      glVertex2f(-0.980, 0.05);
   glEnd();

      glColor3f(1.0f, 0.80f, 0.5f);   //roof
    glBegin(GL_POLYGON);
      glVertex2f(-0.935, 0.16);
      glVertex2f(-0.92, 0.75);
      glVertex2f(-0.99, 0.77);
      glVertex2f(-1.0, 0.20);
     glEnd();

      glColor3f(1.0, 0.0, 1.0);   //front side
      glBegin(GL_POLYGON);
      glVertex2f(-0.90, 0.0);
      glVertex2f(-0.89, 0.66);
      glVertex2f(-0.92, 0.75);
      glVertex2f(-0.935, 0.16);
      glEnd();

      glLineWidth(2);
      glColor3f(0.90, 0.90, 0.90);   //front side
      glBegin(GL_LINES);

      glVertex2f(-0.913, 0.73);
      glVertex2f(-0.929, 0.13);
      glVertex2f(-0.930, 0.13);
      glVertex2f(-0.995, 0.17);

      glVertex2f(-0.905, 0.71);
      glVertex2f(-0.923, 0.095);
      glVertex2f(-0.925, 0.10);
      glVertex2f(-0.991, 0.14);

      glVertex2f(-0.897, 0.68);
      glVertex2f(-0.914, 0.065);
      glVertex2f(-0.915, 0.07);
      glVertex2f(-0.986, 0.11);

      glVertex2f(-0.890, 0.65);
      glVertex2f(-0.906, 0.03);
      glVertex2f(-0.909, 0.035);
      glVertex2f(-0.984, 0.08);

      glEnd();


//Annex 2



      glPushMatrix();
      glScalef(1.0, 1.0, 0.0);
      glTranslatef(-0.31, 0.1, 0.0);

     glColor3f(0.50, 0.50, 0.50);
      glBegin(GL_POLYGON);       //wall
      glVertex2f(0.0, -0.10);
      glVertex2f(0.0, -0.01);
      glVertex2f(-0.59, -0.01);
      glVertex2f(-0.59, -0.10);
      glEnd();
      glColor3f(0.0, 0.0, .0);
      glLineWidth(0.5);
      glBegin(GL_LINE_LOOP);       //wall boarder
      glVertex2f(0.0, -0.10);
      glVertex2f(0.0, -0.01);
      glVertex2f(-0.59, -0.01);
      glVertex2f(-0.59, -0.10);
      glEnd();



      glColor3f(1.0f, 0.80f, 0.5f);    //Roof
      glBegin(GL_POLYGON);
      glVertex2f(-0.1, -0.05);
      glVertex2f(-0.09, 0.08);
      glVertex2f(-0.1, 0.15);
      glVertex2f(-0.60, 0.15);
      glVertex2f(-0.608, 0.08);
      glVertex2f(-0.60, -0.05);
      glEnd();

      glPushMatrix();                  //roof line down
      glTranslatef(-0.5, 0.0, 0.0);
      glColor3f(0.0, 0.0, 0.0);
      glLineWidth(1);
      glBegin(GL_LINES);
      float c;
      for(c=0.5; c<=1.0; c+=0.02){
      glVertex2f(-0.59+c, 0.088);
      glVertex2f(-0.595+c, -0.05);
      }
      glEnd();
      glPopMatrix();

      glPushMatrix();                  //roof line up
      glTranslatef(-0.5, 0.0, 0.0);
      glColor3f(0.0, 0.0, 0.0);
      glLineWidth(1);
      glBegin(GL_LINES);
      float d;
      for(d=0.5; d<=1.0 ;d+=0.02){
      glVertex2f(-0.60+d, 0.15);
      glVertex2f(-0.59+d, 0.06);
      }
      glEnd();
      glPopMatrix();

      glBegin(GL_POLYGON);      //roof top
      glVertex2f(-0.09, 0.065);
      glVertex2f(-0.09, 0.075);
      glVertex2f(-0.609, 0.075);
      glVertex2f(-0.60, 0.065);
      glEnd();

      glBegin(GL_LINE_LOOP);  //roof boarder
      glVertex2f(-0.1, -0.05);
      glVertex2f(-0.09, 0.08);
      glVertex2f(-0.1, 0.15);
      glVertex2f(-0.60, 0.15);
      glVertex2f(-0.608, 0.08);
      glVertex2f(-0.60, -0.05);
      glEnd();
      glPopMatrix();


//Annex 3


      glPushMatrix();
      glScalef(1.0, 1.0, 0.0);
      glTranslatef(-0.30, 0.55, 0.0);

     glColor3f(0.50, 0.50, 0.50);
      glBegin(GL_POLYGON);       //wall
      glVertex2f(-0.1, -0.10);
      glVertex2f(-0.1, -0.01);
      glVertex2f(-0.59, -0.01);
      glVertex2f(-0.59, -0.10);
      glEnd();
      glColor3f(0.0, 0.0, .0);
      glLineWidth(0.5);
      glBegin(GL_LINE_LOOP);       //wall boarder
      glVertex2f(-0.1, -0.10);
      glVertex2f(-0.1, -0.01);
      glVertex2f(-0.59, -0.01);
      glVertex2f(-0.59, -0.10);
      glEnd();



      glColor3f(1.0f, 0.80f, 0.5f);    //Roof
      glBegin(GL_POLYGON);
      glVertex2f(-0.095, -0.05);
      glVertex2f(-0.09, 0.08);
      glVertex2f(-0.1, 0.15);
      glVertex2f(-0.60, 0.15);
      glVertex2f(-0.608, 0.08);
      glVertex2f(-0.60, -0.05);
      glEnd();

      glPushMatrix();                  //roof line down
      glTranslatef(-0.5, 0.0, 0.0);
      glColor3f(0.0, 0.0, 0.0);
      glLineWidth(1);
      glBegin(GL_LINES);
      float e;
      for(e=0.5; e<=1.0 ;e+=0.02){
      glVertex2f(-0.59+e, 0.088);
      glVertex2f(-0.595+e, -0.05);
      }
      glEnd();
      glPopMatrix();

      glPushMatrix();                  //roof line up
      glTranslatef(-0.5, 0.0, 0.0);
      glColor3f(0.0, 0.0, 0.0);
      glLineWidth(1);
      glBegin(GL_LINES);
      float f;
      for(f=0.5; f<=1.0 ;f+=0.02){
      glVertex2f(-0.60+f, 0.15);
      glVertex2f(-0.59+f, 0.06);
      }
      glEnd();
      glPopMatrix();

      glBegin(GL_POLYGON);      //roof top
      glVertex2f(-0.09, 0.065);
      glVertex2f(-0.09, 0.075);
      glVertex2f(-0.609, 0.075);
      glVertex2f(-0.60, 0.065);
      glEnd();

      glBegin(GL_LINE_LOOP);  //roof boarder
      glVertex2f(-0.095, -0.05);
      glVertex2f(-0.09, 0.08);
      glVertex2f(-0.1, 0.15);
      glVertex2f(-0.60, 0.15);
      glVertex2f(-0.608, 0.08);
      glVertex2f(-0.60, -0.05);
      glEnd();
      glPopMatrix();

// TREES

    glPushMatrix();                     //TREE  1 annex 7 front
    glTranslatef(0.0, 0.0, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.52);
    glEnd();
   glPopMatrix();

//Triangle tree
    glPushMatrix();
    glTranslatef(0.0, 0.0, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.7, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();

//1
    glPushMatrix();                     //TREE  1 annex 7 front
    glTranslatef(-0.8, -0.205, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.52);
    glEnd();
   glPopMatrix();

//2
glPushMatrix();                     //TREE  1 annex 7 front
    glTranslatef(-0.7, -0.205, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();

//3
glPushMatrix();                     //TREE  1 annex 7 front
    glTranslatef(-0.6, -0.205, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.52);
    glEnd();
   glPopMatrix();

//4
    glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.5, -0.205, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();
//5
    glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.4, -0.205, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.52);
    glEnd();
   glPopMatrix();

 //6
 glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.3, -0.205, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();
 //7
 glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.2, -0.205, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.52);
    glEnd();
   glPopMatrix();

//8
 glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.2, -0.0, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();

//9
glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.1, -0.0, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.52);
    glEnd();
   glPopMatrix();

//10
glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.1, -0.2, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();

 //11
 glPushMatrix();                     //TREE annex 7 front
    glTranslatef(0.3, -0.0, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();
//12
glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.3, -0.0, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.52);
    glEnd();
   glPopMatrix();

//13
glPushMatrix();                     //TREE annex 7 front
    glTranslatef(0.5, -0.0, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();

//15
glPushMatrix();                     //TREE annex 7 front
    glTranslatef(0.7, -0.0, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();

//16
glPushMatrix();                     //TREE left corner
    glTranslatef(-0.7, -0.8, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.010;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.52);
    glEnd();
   glPopMatrix();
//17
glPushMatrix();                     //TREE left
    glTranslatef(-0.8, -0.9, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.02;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.02;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.02;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.5);
    glEnd();
   glPopMatrix();

//18
glPushMatrix();                     //TREE left corner
    glTranslatef(-0.7, -1.3, 0.0);
    glPushMatrix();
    glTranslatef(0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.02;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.02;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-0.01, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.5);
	for(int i=0;i<200;i++)
	{float pi=3.1416;
     float A=(i*2*pi)/200;
     float r=0.02;
     float x = r * cos(A);
     float y = r * sin(A);
     glVertex2f(x, 2*y);
	}
	glEnd();
	glLineWidth(2);
    glPopMatrix();
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.6);
    glVertex2f(0.0, 0.5);
    glEnd();
   glPopMatrix();

//19
glPushMatrix();                     //TREE annex 7 front
    glTranslatef(-0.9, -1.2, 0.0);
    glPushMatrix();
    glTranslatef(0.0, 0.57, 0.0);
    glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.0);
     glVertex2f(0.0, 0.03);
     glVertex2f(-0.03, 0.0);
	glEnd();
	glBegin(GL_POLYGON);
    glColor3f(0, 0.8, 0.0);
     glVertex2f(0.03, 0.015);
     glVertex2f(0.0, 0.045);
     glVertex2f(-0.03, 0.015);
	glEnd();
	glLineWidth(2);
    glBegin(GL_LINES);
    glVertex2f(0.0, 0.0);
    glVertex2f(0.0, -0.04);
    glEnd();
   glPopMatrix();
   glPopMatrix();

// C BUILDING

    glPushMatrix();                //basement
    glScalef(0.4, 0.4, 0.5);
    glTranslatef(0.25, 0.28, 0.0);
    glColor3ub(195, 69, 69);
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.4;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(x, 0.6*y );
        }
      glEnd();
      glColor3f(0.80, 0.80, 1.0);
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.3;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(x, 0.6*y );
        }
      glEnd();

      glPopMatrix();



    glPushMatrix();                  //glove
    glScalef(0.20, 0.30, 0.0);
    glTranslatef(0.5, 0.90, 0.0);
    glPushMatrix();
    glBegin(GL_TRIANGLE_FAN);
    glColor3ub(227, 227, 227);
    int i;
    GLfloat x=.0f; GLfloat y=.3f; GLfloat radius =.7f;
    int triangleAmount = 30;

    GLfloat twicePi = 2.0f * PI;
    glVertex2f(x, y);
        for(i = 0; i <= triangleAmount;i++)
        {
            glVertex2f
            (
               x + (radius * cos(i *  twicePi / triangleAmount)),
               y + (radius * sin(i * twicePi / triangleAmount))
            );
        }
    glEnd();

    glBegin(GL_QUADS);
    glColor3ub(184, 184, 184);
    glVertex2f(0.36f,-0.3f);
    glVertex2f(-0.36f,-0.3f);
    glVertex2f(-0.36f,-0.6f);
    glVertex2f(0.36f,-0.6f);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(61, 79, 84);

    glVertex2f(0.42f,0.85f);
    glVertex2f(0.40f,0.75f);
    glVertex2f(-0.4f,0.75f);
    glVertex2f(-0.42f,0.85f);
    glVertex2f(-0.57f,0.70f);
    glVertex2f(-0.20f,0.66f);
    glVertex2f(0.20f,0.66f);
    glVertex2f(0.57f,0.70f);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(61, 79, 84);

    glVertex2f(0.64f,0.55f);
    glVertex2f(0.4f,0.40f);
    glVertex2f(-0.4f,0.40f);
    glVertex2f(-0.64f,0.55f);
    glVertex2f(-0.7f,0.35f);
    glVertex2f(-0.30f,0.30f);
    glVertex2f(0.30f,0.30f);
    glVertex2f(0.7f,0.35f);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(61, 79, 84);

    glVertex2f(0.685f,0.20f);
    glVertex2f(0.4f,0.18f);
    glVertex2f(-0.4f,0.18f);
    glVertex2f(-0.685f,0.20f);
    glVertex2f(-0.64f, 0.05f);
    glVertex2f(-0.45f, 0.01f);
    glVertex2f(0.45f, 0.01f);
    glVertex2f(0.64f, 0.05f);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(61, 79, 84);

    glVertex2f(0.58f,-0.10f);
    glVertex2f(0.3f,-0.12f);
    glVertex2f(-0.3f,-0.12f);
    glVertex2f(-0.58f,-0.10f);
    glVertex2f(-0.37f,-0.3f);
    glVertex2f(-0.36f,-0.3f);
    glVertex2f(0.36f,-0.3f);
    glVertex2f(0.37f,-0.3f);
    glEnd();
    glPopMatrix();
    glPopMatrix();



// PLAY GROUND


      glPushMatrix();                  //FOOTBALL
      glScalef(0.7, 0.75, 0.7);
      glTranslatef(-0.18, -0.63, 0.0);
      glColor3f(0.0, 1.0, 0.0);
      glBegin(GL_POLYGON);
      glVertex2f(0.6, -0.5);
      glVertex2f(0.6, 0.5);
      glVertex2f(-0.6, 0.5);
      glVertex2f(-0.6, -0.5);

      glEnd();
      glPopMatrix();

      glPushMatrix();                  //BADMINTON and TENIS
      glScalef(0.25, 0.75, 0.7);
      glTranslatef(1.79, -0.63, 0.0);

      glColor3f(0.8, 0.8, 0.8);
      glBegin(GL_POLYGON);
      glVertex2f(0.6, -0.5);
      glVertex2f(0.6, 0.5);
      glVertex2f(-0.6, 0.5);
      glVertex2f(-0.6, -0.5);
      glEnd();

      glPushMatrix();
      glColor3f(1.0, 1.0, 1.0);
      glLineWidth(2);
      glBegin(GL_LINE_LOOP);
      glVertex2f(0.55, -0.45);
      glVertex2f(0.55, -0.05);
      glVertex2f(-0.55, -0.05);
      glVertex2f(-0.55, -0.45);
      glEnd();

      glBegin(GL_LINES);          //BADMINTON
      glVertex2f(0.45, -0.45);
      glVertex2f(0.45, -0.05);
      glVertex2f(-0.45, -0.05);
      glVertex2f(-0.45, -0.45);
      glVertex2f(-0.0, -0.05);
      glVertex2f(-0.0, -0.45);
      glVertex2f(-0.35, 0.25);
      glVertex2f(0.35, 0.25);

      glVertex2f(-0.95, -0.2);    //FOOTBALL BAR
      glVertex2f(-0.95, 0.2);
      glVertex2f(-3.6, -0.2);
      glVertex2f(-3.6, 0.2);


      glEnd();

      glColor3f(0.0, 0.0, 0.0);
      glPointSize(5);
      glBegin(GL_POINTS);
      glVertex2f(-0.35, 0.25);    //TENIS BAR
      glVertex2f(0.35, 0.25);

      glVertex2f(-0.95, -0.2);   //FOOTBALL
      glVertex2f(-0.95, 0.2);
      glVertex2f(-3.6, -0.2);
      glVertex2f(-3.6, 0.2);
      glEnd();

      glPopMatrix();
      glPopMatrix();


// D-BUILDING


    glPushMatrix();                //Down
    glScalef(-0.8, 1.5, 0.0);
    glTranslatef(0.0, -0.5, 0.0);
       glColor3f(0.0, 0.0, 1.0);  //south side
    glBegin(GL_POLYGON);
      glVertex2f(-0.90, 0.0);
      glVertex2f(-0.935, 0.16);
      glVertex2f(-1.032, 0.215);
      glVertex2f(-1.013, 0.05);
   glEnd();

      glColor3f(1.0f, 0.80f, 0.5f);   //roof
    glBegin(GL_POLYGON);
      glVertex2f(-0.935, 0.16);
      glVertex2f(-0.92, 0.75);
      glVertex2f(-0.99, 0.77);
      glVertex2f(-1.0, 0.20);
     glEnd();

      glColor3f(1.0, 0.0, 1.0);   //front side
      glBegin(GL_POLYGON);
      glVertex2f(-0.90, 0.0);
      glVertex2f(-0.89, 0.66);
      glVertex2f(-0.92, 0.75);
      glVertex2f(-0.935, 0.16);
      glEnd();

      glLineWidth(2);
      glColor3f(0.90, 0.90, 0.90);   //front side
      glBegin(GL_LINES);

      glVertex2f(-0.935, 0.16);
      glVertex2f(-1.035, 0.205);

      glVertex2f(-0.913, 0.73);
      glVertex2f(-0.929, 0.13);
      glVertex2f(-0.930, 0.13);
      glVertex2f(-1.03, 0.175);

      glVertex2f(-0.905, 0.71);
      glVertex2f(-0.923, 0.095);
      glVertex2f(-0.925, 0.10);
      glVertex2f(-1.025, 0.145);

      glVertex2f(-0.897, 0.68);
      glVertex2f(-0.914, 0.065);
      glVertex2f(-0.915, 0.07);
      glVertex2f(-1.021, 0.114);

      glVertex2f(-0.890, 0.65);
      glVertex2f(-0.906, 0.03);
      glVertex2f(-0.909, 0.035);
      glVertex2f(-1.017, 0.083);

      glEnd();

     glPopMatrix();



    glPushMatrix();                            //UP
    glScalef(-0.8, 1.29, 0.0);
    glTranslatef(-0.05, -0.385, 0.0);
    glColor3f(0.0, 0.0, 1.0);  //south side
    glBegin(GL_POLYGON);
      glVertex2f(-0.90, 0.0);
      glVertex2f(-0.935, 0.16);
      glVertex2f(-1.0, 0.20);
      glVertex2f(-0.980, 0.05);
   glEnd();

      glColor3f(1.0f, 0.80f, 0.5f);   //roof
    glBegin(GL_POLYGON);
      glVertex2f(-0.935, 0.16);
      glVertex2f(-0.92, 0.75);
      glVertex2f(-0.99, 0.77);
      glVertex2f(-1.0, 0.20);
     glEnd();

      glColor3f(1.0, 0.0, 1.0);   //front side
      glBegin(GL_POLYGON);
      glVertex2f(-0.90, 0.0);
      glVertex2f(-0.89, 0.66);
      glVertex2f(-0.92, 0.75);
      glVertex2f(-0.935, 0.16);
      glEnd();

      glLineWidth(2);
      glColor3f(0.90, 0.90, 0.90);   //front side
      glBegin(GL_LINES);

      glVertex2f(-0.913, 0.73);
      glVertex2f(-0.929, 0.13);
      glVertex2f(-0.930, 0.13);
      glVertex2f(-0.995, 0.17);

      glVertex2f(-0.905, 0.71);
      glVertex2f(-0.923, 0.095);
      glVertex2f(-0.925, 0.10);
      glVertex2f(-0.991, 0.14);

      glVertex2f(-0.897, 0.68);
      glVertex2f(-0.914, 0.065);
      glVertex2f(-0.915, 0.07);
      glVertex2f(-0.986, 0.11);

      glVertex2f(-0.890, 0.65);
      glVertex2f(-0.906, 0.03);
      glVertex2f(-0.909, 0.035);
      glVertex2f(-0.984, 0.08);

      glEnd();

     glPopMatrix();


// ROAD

    glPushMatrix();


      glPushMatrix();
      glColor3f(0.0f, 0.0f, 0.0f);
      glBegin(GL_POLYGON);
      glVertex2f(0.6, -0.99);
      glVertex2f(0.6, -0.85);
      glVertex2f(-1.0, -0.85);
      glVertex2f(-1.0, -0.99);
      glEnd();
      glPopMatrix();

      glPushMatrix();
      glColor3f(0.0f, 0.0f, 0.0f);
      glBegin(GL_POLYGON);
      glVertex2f(0.67, -0.99);
      glVertex2f(0.67, 0.5);
      glVertex2f(0.6, 0.5);
      glVertex2f(0.6, -0.99);
      glEnd();
      glPopMatrix();


      glPushMatrix();                 // white boarder
      glColor3f(1.0f, 1.0f, 1.0f);
      glLineWidth(3);
      glBegin(GL_LINES);
      glVertex2f(-1.0, -0.85);         //up line
      glVertex2f(0.6, -0.85);
      glVertex2f(0.6, -0.85);
      glVertex2f(0.6, 0.5);


      glVertex2f(-0.98, -0.92);         //middle line
      glVertex2f(-0.83, -0.92);
      glVertex2f(-0.68, -0.92);
      glVertex2f(-0.53, -0.92);
      glVertex2f(-0.38, -0.92);
      glVertex2f(-0.23, -0.92);
      glVertex2f(-0.08, -0.92);
      glVertex2f(0.07, -0.92);
      glVertex2f(0.22, -0.92);
      glVertex2f(0.37, -0.92);
      glVertex2f(0.51, -0.92);
      glVertex2f(0.64, -0.92);

      glVertex2f(0.636, -0.75);
      glVertex2f(0.636, -0.50);
      glVertex2f(0.636, -0.30);
      glVertex2f(0.636, -0.10);
      glVertex2f(0.636, 0.05);
      glVertex2f(0.636, 0.20);
      glVertex2f(0.636, 0.30);
      glVertex2f(0.636, 0.40);

      glVertex2f(-1.0, -0.99);         //down line
      glVertex2f(0.675, -0.99);
      glVertex2f(0.675, -0.99);
      glVertex2f(0.675, 0.5);
      glEnd();
      glPopMatrix();

   glPopMatrix();


// CAR-1

glPushMatrix();
      glTranslatef(-0.20, 0.0, 0.0);
  glPushMatrix();
      glTranslatef(carmove, 0.0f, 0.0f);
    glPushMatrix();
      glColor3f(1.0, 0.0, 0.0);
      glBegin(GL_POLYGON);
      glVertex2f(0.05, -0.91);
      glVertex2f(0.05, -0.86);
      glVertex2f(0.03, -0.851);
      glVertex2f(0.0, -0.855);
      glVertex2f(0.0, -0.915);
      glVertex2f(0.03, -0.919);
      glEnd();
    glPopMatrix();
    glPushMatrix();
      glColor3f(0.30, 0.30, 0.30);
      glBegin(GL_POLYGON);
      glVertex2f(0.03, -0.905);
      glVertex2f(0.03, -0.865);
      glVertex2f(0.01, -0.865);
      glVertex2f(0.01, -0.905);
      glEnd();
    glPopMatrix();
   glPopMatrix();
 glPopMatrix();

//CAR  2

 glPushMatrix();
      glScalef(1.0, 1.08, 0.5);
      glTranslatef(-0.20, 0.0, 0.0);
   glPushMatrix();
      glTranslatef(-carmove, 0.0f, 0.0f);
     glPushMatrix();
      glColor3f(1.0, 1.0, 0.0);
      glBegin(GL_POLYGON);
      glVertex2f(-0.05, -0.91);
      glVertex2f(-0.05, -0.86);
      glVertex2f(-0.03, -0.851);
      glVertex2f(-0.0, -0.855);
      glVertex2f(-0.0, -0.915);
      glVertex2f(-0.03, -0.919);
      glEnd();
     glPopMatrix();
     glPushMatrix();
      glColor3f(0.90, 0.10, 0.20);
      glBegin(GL_POLYGON);
      glVertex2f(-0.03, -0.905);
      glVertex2f(-0.03, -0.865);
      glVertex2f(-0.01, -0.865);
      glVertex2f(-0.01, -0.905);
      glEnd();
    glPopMatrix();
  glPopMatrix();
 glPopMatrix();


 //CAR 3

 glPushMatrix();
      glTranslatef(0.595, 0.0, 0.0);
   glPushMatrix();
      glTranslatef(0.0f, carmove, 0.0f);
    glPushMatrix();
      glColor3f(1.0, 0.0, 0.0);
      glBegin(GL_POLYGON);
      glVertex2f(0.040, 0.0);
      glVertex2f(0.042, 0.068);
      glVertex2f(0.036, 0.080);
      glVertex2f(0.014, 0.080);
      glVertex2f(0.008, 0.068);
      glVertex2f(0.010, 0.0);
      glEnd();
    glPopMatrix();
    glPushMatrix();
      glColor3f(0.30, 0.30, 0.30);
      glBegin(GL_POLYGON);
      glVertex2f(0.034, 0.010);
      glVertex2f(0.034, 0.040);
      glVertex2f(0.017, 0.040);
      glVertex2f(0.017, 0.010);
      glEnd();
    glPopMatrix();
   glPopMatrix();
 glPopMatrix();


//CAR 4

 glPushMatrix();
      glTranslatef(0.63f, -0.1f, 0.0f);
  glPushMatrix();
      glTranslatef(0.0f, -carmove, 0.0f);
    glPushMatrix();
      glColor3f(1.0, 1.0, 0.0);
      glBegin(GL_POLYGON);
      glVertex2f(0.040, -0.0);
      glVertex2f(0.042, -0.068);
      glVertex2f(0.036, -0.080);
      glVertex2f(0.014, -0.080);
      glVertex2f(0.008, -0.068);
      glVertex2f(0.010, -0.0);
      glEnd();
    glPopMatrix();
    glPushMatrix();
      glColor3f(0.90, 0.10, 0.20);
      glBegin(GL_POLYGON);
      glVertex2f(0.034, -0.010);
      glVertex2f(0.034, -0.040);
      glVertex2f(0.017, -0.040);
      glVertex2f(0.017, -0.010);
      glEnd();
     glPopMatrix();
    glPopMatrix();
    glPopMatrix();

    glPushMatrix();
      glColor3f(1.0f, 1.0f, 1.0f);
      glBegin(GL_POLYGON);
      glVertex2f(0.595, 0.5);
      glVertex2f(0.595, 0.7);
      glVertex2f(0.675, 0.7);
      glVertex2f(0.675, 0.5);
      glEnd();
      glColor3f(0.52f, 0.80f, 0.92f);
      glBegin(GL_POLYGON);
      glVertex2f(0.595, 0.7);
      glVertex2f(0.595, 0.9);
      glVertex2f(0.675, 0.9);
      glVertex2f(0.675, 0.7);
      glEnd();
    glPopMatrix();


// ANNEX 1

      glColor3f(0.50, 0.50, 0.50);
      glBegin(GL_POLYGON);       //wall
      glVertex2f(0.58, -0.10);
      glVertex2f(0.58, -0.01);
      glVertex2f(-0.59, -0.01);
      glVertex2f(-0.59, -0.10);
      glEnd();
      glColor3f(0.0, 0.0, .0);
      glLineWidth(0.5);
      glBegin(GL_LINE_LOOP);       //wall boarder
      glVertex2f(0.58, -0.10);
      glVertex2f(0.58, -0.01);
      glVertex2f(-0.59, -0.01);
      glVertex2f(-0.59, -0.10);
      glEnd();



      glColor3f(1.0f, 0.80f, 0.5f);    //Roof
      glBegin(GL_POLYGON);
      glVertex2f(0.59, -0.05);
      glVertex2f(0.60, 0.08);
      glVertex2f(0.59, 0.15);
      glVertex2f(-0.60, 0.15);
      glVertex2f(-0.608, 0.08);
      glVertex2f(-0.60, -0.05);
      glEnd();

      glPushMatrix();                  //roof line down
      glTranslatef(-1.0, 0.0, 0.0);
      glColor3f(0.0, 0.0, 0.0);
      glLineWidth(1);
      glBegin(GL_LINES);
      float a;
      for(a=1; a<=2.2 ;a+=0.02){
      glVertex2f(-0.59+a, 0.088);
      glVertex2f(-0.595+a, -0.05);
      }
      glEnd();
      glPopMatrix();

      glPushMatrix();                  //roof line up
      glTranslatef(-1.0, 0.0, 0.0);
      glColor3f(0.0, 0.0, 0.0);
      glLineWidth(1);
      glBegin(GL_LINES);
      float b;
      for(b=1; b<=2.2 ;b+=0.02){
      glVertex2f(-0.60+b, 0.15);
      glVertex2f(-0.59+b, 0.06);
      }
      glEnd();
      glPopMatrix();

      glBegin(GL_POLYGON);      //roof top
      glVertex2f(0.60, 0.065);
      glVertex2f(0.60, 0.075);
      glVertex2f(-0.609, 0.075);
      glVertex2f(-0.60, 0.065);
      glEnd();

      glBegin(GL_LINE_LOOP);  //roof boarder
      glVertex2f(0.59, -0.05);
      glVertex2f(0.60, 0.08);
      glVertex2f(0.59, 0.15);
      glVertex2f(-0.60, 0.15);
      glVertex2f(-0.608, 0.08);
      glVertex2f(-0.60, -0.05);
      glEnd();


// SUN

    glPushMatrix();
       glScalef(0.5f, 1.0f, 1.0f);
       glTranslatef(sunmove, 0.0f, 0.0f);
       glColor3f(1.0, 0.0, 0.0);

       glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(0.0+x, 0.8+y );
        }
        glEnd();
    glPopMatrix();


// CLOUDS


    glPushMatrix();
       glScalef(0.6f, 1.2f, 0.9f);
       glTranslatef(cloudmove, 0.0f, 0.0f);
       glColor3f(1.0, 1.0, 1.0);
//1.1
       glPushMatrix();
       glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(x, 0.70+y);
        }
      glEnd();
      glPopMatrix();
//1.2
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(0.05+x, 0.75+y );
        }
      glEnd();
      glPopMatrix();
//1.3
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(0.12+x, 0.76+y );
        }
      glEnd();
      glPopMatrix();
//1.4
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(0.18+x, 0.75+y );
        }
      glEnd();
      glPopMatrix();
 //1.5
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(0.13+x, 0.71+y );
        }
      glEnd();
      glPopMatrix();
 //1.6
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(0.07+x, 0.70+y );
        }
      glEnd();
      glPopMatrix();

//Small cloud

//2.1
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(-1.0+x, 0.7+y);
        }
      glEnd();
      glPopMatrix();
//2.2
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(-0.95+x, 0.75+y );
        }
      glEnd();
      glPopMatrix();
//2.3
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(-0.90+x, 0.75+y );
        }
      glEnd();
      glPopMatrix();
//2.4
      glPushMatrix();
      glBegin(GL_POLYGON);
	    for(int i=0;i<200;i++)
        {
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r= 0.05;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(-0.95+x, 0.7+y );
        }
      glEnd();
      glPopMatrix();

glPopMatrix();



// BIRDS

//1
      glPushMatrix();

      glTranslatef(birdmove, 0.0f, 0.0f);
      glColor3f(0.0f, 0.0f, 0.0f);
      glPushMatrix();
      glBegin(GL_POLYGON);
      for(int i=-10;i<50;i++){
      float pi=3.1416;
      float A=(i*2*pi)/200;
      float r=0.015;
      float x = r * cos(A);
      float y = r * sin(A);
      glVertex2f(-0.9+x, 0.8+4*y );}
      glEnd();
      glBegin(GL_POLYGON);
      glVertex2f(-0.905f, 0.801f);
      glVertex2f(-0.89f, 0.828f);
      glVertex2f(-0.91f, 0.828f);
      glEnd();
      glPointSize(3);
      glBegin(GL_POINTS);
      glVertex2f(-0.885f, 0.828f);
      glVertex2f(-0.882f, 0.829f);
      glEnd();
      glPopMatrix();

//2

      glScalef(0.95, 0.88, 0);
      glPushMatrix();
      glBegin(GL_POLYGON);
      for(int i=-10;i<50;i++)
     {
      float pi=3.1416;
      float A=(i*2*pi)/200;
      float r=0.015;
      float x = r * cos(A);
      float y = r * sin(A);
      glVertex2f(-0.9+x, 0.8+4*y );}
      glEnd();
      glBegin(GL_POLYGON);
      glVertex2f(-0.905f, 0.801f);
      glVertex2f(-0.89f, 0.828f);
      glVertex2f(-0.91f, 0.828f);
      glEnd();
      glPointSize(3);
      glBegin(GL_POINTS);
      glVertex2f(-0.885f, 0.828f);
      glVertex2f(-0.882f, 0.829f);
      glEnd();
      glPopMatrix();
//3

      glScalef(0.92, 0.98, 0);
      glPushMatrix();
      glBegin(GL_POLYGON);
      for(int i=-10;i<50;i++)
     {
      float pi=3.1416;
      float A=(i*2*pi)/200;
      float r=0.015;
      float x = r * cos(A);
      float y = r * sin(A);
      glVertex2f(-0.9+x, 0.8+4*y );}
      glEnd();
      glBegin(GL_POLYGON);
      glVertex2f(-0.905f, 0.801f);
      glVertex2f(-0.89f, 0.828f);
      glVertex2f(-0.91f, 0.828f);
      glEnd();
      glPointSize(3);
      glBegin(GL_POINTS);
      glVertex2f(-0.885f, 0.828f);
      glVertex2f(-0.882f, 0.829f);
      glEnd();
      glPopMatrix();

//4
      glScalef(0.9, 0.93, 0);
      glPushMatrix();
      glBegin(GL_POLYGON);
      for(int i=-10;i<50;i++)
     {
      float pi=3.1416;
      float A=(i*2*pi)/200;
      float r=0.015;
      float x = r * cos(A);
      float y = r * sin(A);
      glVertex2f(-0.9+x, 0.8+4*y );}
      glEnd();
      glBegin(GL_POLYGON);
      glVertex2f(-0.905f, 0.801f);
      glVertex2f(-0.89f, 0.828f);
      glVertex2f(-0.91f, 0.828f);
      glEnd();
      glPointSize(3);
      glBegin(GL_POINTS);
      glVertex2f(-0.885f, 0.828f);
      glVertex2f(-0.882f, 0.829f);
      glEnd();
      glPopMatrix();

//5
      glScalef(1.15, 1.25, 0);
      glPushMatrix();
      glBegin(GL_POLYGON);
      for(int i=-10;i<50;i++)
     {
      float pi=3.1416;
      float A=(i*2*pi)/200;
      float r=0.015;
      float x = r * cos(A);
      float y = r * sin(A);
      glVertex2f(-0.9+x, 0.8+4*y );}
      glEnd();
      glBegin(GL_POLYGON);
      glVertex2f(-0.905f, 0.801f);
      glVertex2f(-0.89f, 0.828f);
      glVertex2f(-0.91f, 0.828f);
      glEnd();
      glPointSize(3);
      glBegin(GL_POINTS);
      glVertex2f(-0.885f, 0.828f);
      glVertex2f(-0.882f, 0.829f);
      glEnd();
      glPopMatrix();

      glPopMatrix();

//
glColor3f(1.0, 0.0, 0.0);
     glBegin(GL_LINES);
      glVertex2f(1.0, 0.0);
      glVertex2f(-1.0, 0.0);
      glVertex2f(0.0, 1.0);
      glVertex2f(0.0, -1.0);
      glEnd();
//


   glFlush();


}


void carforward(int value){

    if(frd){

    carmove += carspeed;

    if (carmove > 0.75) {
		carmove = -0.75;
	}

	glutPostRedisplay();
	glutTimerFunc(25, carforward, 0);
}
}

void carbackward(int value){
    if(bck)
    {
    carmove -= carspeed;

    if (carmove < -0.75)
        {
		carmove = 0.75;
	    }
    glutPostRedisplay();
	glutTimerFunc(25, carbackward, 0);
   }
}


void Rain(int value){
    if(rainday)
    {
        rain +=rainspeed;

    glPushMatrix();              //left down
    glLineWidth(0.3);
    glScalef(-0.04, -0.04, 0);
    glBegin(GL_POINTS);
    for(int i=1;i<=10000;i++)
    {
        int x=rand(),y=rand();
        x%=100; y%=100;

        glBegin(GL_LINES);
        glColor3f(1.0, 1.0, 1.0);
        glVertex2d(x,y);
        glVertex2d(x+0.5,y+0.5);
        glEnd();

    }
    glEnd();
    glPopMatrix();



    glPushMatrix();              //left up
    glLineWidth(0.3);
    glScalef(-0.04, 0.04, 0);
    glBegin(GL_POINTS);
    for(int i=1;i<=10000;i++)
    {
        int x=rand(),y=rand();
        x%=100; y%=100;

        glBegin(GL_LINES);
        glColor3f(1.0, 1.0, 1.0);
        glVertex2d(x,y);
        glVertex2d(x+0.5,y-0.5);
        glEnd();

    }
    glEnd();
    glPopMatrix();


    glPushMatrix();             //right up
    glLineWidth(0.3);
    glScalef(0.04, 0.04, 0);
    glBegin(GL_POINTS);
    for(int i=1;i<=10000;i++)
    {
        int x=rand(),y=rand();
        x%=100; y%=100;

        glBegin(GL_LINES);
        glColor3f(1.0, 1.0, 1.0);
        glVertex2d(x,y);
        glVertex2d(x+0.5,y+0.5);
        glEnd();

    }
    glEnd();
    glPopMatrix();


    glPushMatrix();            //right down
    glLineWidth(0.3);
    glScalef(0.04, -0.04, 0);
    glBegin(GL_POINTS);
    for(int i=1;i<=10000;i++)
    {
        int x=rand(),y=rand();
        x%=100; y%=100;

        glBegin(GL_LINES);
        glColor3f(1.0, 1.0, 1.0);
        glVertex2d(x,y);
        glVertex2d(x+0.5,y-0.5);
        glEnd();

    }
    glEnd();
    glPopMatrix();


    glutPostRedisplay();
    glutTimerFunc(1, Rain, 0);

    glFlush();
}
}


void update(int value) {

// SUN

      if(sunmove > 2.0)
         sunmove = -2.0f;
         sunmove += sunspeed;

// CLOUDS

      if(cloudmove > 2.8)
        cloudmove = -1.9f;
        cloudmove += cloudspeed;

// BIRDS

      if(birdmove > 2)
         birdmove = -0.2f;
         birdmove += birdspeed;


	glutPostRedisplay();
	glutTimerFunc(50, update, 0);
}



void init() {
   glClearColor(0.52f, 0.80f, 0.92f, 0.0f);
}


/*void handleMouse(int button, int state, int x, int y) {
	/*if (button == GLUT_LEFT_BUTTON)
	{
		if (state == GLUT_DOWN)
		{
			speed += 0.1f;
			printf("clicked at (%d, %d)\n", x, y);
		}
	}

	glutPostRedisplay();
}
*/
void handleKeypress(unsigned char key, int x, int y) {


// CARS

  switch (key)
	{

//CAR

	case 'c':
	     frd = true;
	     bck = false;
         carforward(carmove);
    break;
    case 'v':
        frd = false;
	    bck = true;
	    carbackward(carmove);
	break;
    case 's':
        frd = false;
        bck = false;
    break;

//RAIN

    case 'r':
        rainday = true;
        Rain(rain);
      //sndPlaySound("River.wav",SND_ASYNC|SND_LOOP);
      //sndPlaySound("River.wav",SND_MEMORY|SND_ASYNC);
    break;
    case 'e':
        rainday = false;
      //sndPlaySound(NULL,SND_ASYNC);
    break;

/*
//DAY - NIGHT

  case ' ':

    break;
  case ' ':

    break;

    default:
    break;
     }
*/


glutPostRedisplay();

}
}
int main(int argc, char** argv) {

   glutInit(&argc, argv);
   glutInitWindowSize(1200, 600);
   glutInitWindowPosition(0,0);
   glutCreateWindow("AIUB CAMPUS VIEW");
   glutDisplayFunc(display);
   init();
   glutKeyboardFunc(handleKeypress);
   //glutMouseFunc(handleMouse);
   glutTimerFunc(1000, update, 0);
   glutMainLoop();
   return 0;
}
